from classes.printer import *
import datetime


class PrintJob(db.Entity):
    printed_on = Optional(Printer)
    """Printer this job was processed on."""
    permission_code = Optional('PermissionCode')
    job_id = Required(int)
    """ID from the job submission system. We use Jira. This will be the unique ID generated by jira. Only digits in our case."""
    job_name = Optional(str)
    """Optional custom job name from the submission system. We use PR-#### formatted names."""
    user = Required('User')
    print_started_date = Optional(datetime.datetime)
    print_finished_date = Optional(datetime.datetime)
    payment_link_generated_date = Optional(datetime.datetime)
    paid_date = Optional(datetime.datetime)
    payment_link = Optional(str)
    weight = Optional(float)
    cost = Optional(float)
    gcode_url = Optional(str)
    print_status = Required(str)
    """PrintStatus Enum"""
    payment_status = Optional(str)
    """PaymentStatus Enum"""

    @staticmethod
    @db_session
    def Get_All_By_Status(print_status: PrintStatus):
        query_result = select(pj for pj in PrintJob if pj.print_status == print_status.name)
        print_jobs = []
        for p in query_result:
            print_jobs.append(p)
        return print_jobs
