from pony.orm import *
from classes.enumDefinitions import *
import datetime

db = Database()


class Printer(db.Entity):
    name = Required(str, unique=True)
    """Human friendly name for printer. Example: 'Prusa01' """
    model = Required(str)
    """Model of the printer."""
    ip = Required(str, unique=True)
    """IP address to send print files to and query print status from."""
    api_key = Required(str)
    """Required API key to communicate with printer."""
    stream_ip = Optional(str)
    """Optional IP address for a streaming camera."""
    material_type = Optional(str)
    material_color = Optional(str)
    material_density = Optional(float)
    enabled = Required(bool)
    print_jobs = Set('PrintJob')
    """Used to relate print jobs to this printer. Not an actual field, just a Pony ORM thing"""

    @staticmethod
    @db_session
    def Get_All():
        query_result = select(p for p in Printer)
        printers = []
        for p in query_result:
            printers.append(p)
        return printers

    @staticmethod
    @db_session
    def Get_All_By_Type(printer_model: PrinterModel):
        query_result = select(p for p in Printer if p.model == printer_model.name)
        printers = []
        for p in query_result:
            printers.append(p)
        return printers


class PrintJob(db.Entity):
    printed_on = Optional(Printer)
    """Printer this job was processed on."""
    job_id = Required(int)
    """ID from the job submission system. We use Jira. This will be the unique ID generated by jira. Only digits in our case."""
    job_name = Optional(str)
    """Optional custom job name from the submission system. We use PR-#### formatted names."""
    downloaded_at = Required(datetime.datetime)
